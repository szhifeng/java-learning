buildscript {
	ext {
		springBootVersion = '2.7.0'
	}
}

plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java-library'
}

// java plugin内置的可设变量
group = 'com.example.concurrent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

subprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'

	dependencies {
		// 相当于provided scope，不打到构建产物中
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		// 相当于test scope，仅在单元测试使用
		testImplementation 'org.testng:testng:6.14.2'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		// 在allprojects下只要声明lombok，junit/testng这类通用依赖
		// 不应该再添加任何属于某个子项目的依赖
	}

	test {
		//  useTestNG() 要用junit可以换成：useJUnitPlatform()
		useJUnitPlatform()
	}
}
bootJar { enabled = false}